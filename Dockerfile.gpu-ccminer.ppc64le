FROM nvidia/cuda-ppc64le:9.1-devel-ubuntu16.04

RUN apt-get update

# The packages mentioned in the INSTALL phase, except:
# jansson-devel - We're going to build our own since the version 2.4.x doesn't have json_array_foreach
# make - Added it because Centos doesn't have it even after getting autoconf/automake
RUN apt-get install -y git build-essential make wget autoconf automake libssl-dev libcurl4-openssl-dev libz-dev libjansson-dev

# Create a user to do the build
ENV BUILD_FOLDER=/minerbuild
ENV APP_FOLDER=/app
ENV APP_USER=minerbuilder
ENV CCMINER_VERSION=x16r

RUN adduser $APP_USER \
 && mkdir $BUILD_FOLDER \
 && chown $APP_USER.users $BUILD_FOLDER

# We'll build jansson as regular user
USER $APP_USER

# Now switch to the builder and check out the git repo
USER $APP_USER

# Clone from the git repo
RUN cd $BUILD_FOLDER \
 && git clone --branch linux --single-branch https://github.com/tpruvot/ccminer

ENV CCMINER_FOLDER=$BUILD_FOLDER/ccminer

# Uncomment all the architectures

ENV CCMINER_FOLDER=$BUILD_FOLDER/ccminer

# Replace uncomment all the old architectures
RUN cd $CCMINER_FOLDER \
 && sed \
     -e 's/#nvcc_ARCH += -gencode=arch=compute_61/nvcc_ARCH += -gencode=arch=compute_61/' \
     -e 's/#nvcc_ARCH += -gencode=arch=compute_35/nvcc_ARCH += -gencode=arch=compute_35/' \
     -e 's/#nvcc_ARCH += -gencode=arch=compute_30/nvcc_ARCH += -gencode=arch=compute_30/' \
     Makefile.am > Makefile2.am
RUN cd $CCMINER_FOLDER \
 && cp Makefile2.am Makefile.am \
 && rm Makefile2.am
RUN cd $CCMINER_FOLDER ; sed -i -e 's/march=native/mcpu=native -mtune=native/' configure.sh
#RUN cd $CCMINER_FOLDER ; sed -i -e 's%^.*emmintrin.h%// #include <emmintrin.h>%' scrypt.cpp crypto/wildkeccak-cpu.cpp equi/blake2/blake2bx.cpp

# Run the build
RUN cd $CCMINER_FOLDER \
 && ./build.sh

# Copy the ccminer binary to a /app folder
USER root

RUN mkdir $APP_FOLDER && \
    chown $APP_USER.users $APP_FOLDER && \
    cp $CCMINER_FOLDER/ccminer $APP_FOLDER

# Switch to a multistage build with the runtime image
FROM nvidia/cuda-ppc64le:9.1-runtime-ubuntu16.04

# Redefine the app user and folder - note app folder must be the same as the first stage
ENV APP_FOLDER=/app
ENV APP_USER=miner

# Copy the stuff that we built
COPY --from=0 $APP_FOLDER $APP_FOLDER
COPY --from=0 /usr/local/lib /usr/local/lib

# Get the non-devel versions of the libraries that we need
RUN apt-get install -y libssl libcurl4 libz libgomp1

# Load the Jansson library that's now built
RUN echo /usr/local/lib > /etc/ld.so.conf.d/userlocal.conf \
 && ldconfig

# Symlink the app to /usr/local/bin
RUN ln -s $APP_FOLDER/ccminer /usr/local/bin/ccminer \
 && chown -R root.root $APP_FOLDER

# Recreate and switch to the app user for this build
RUN adduser $APP_USER
USER $APP_USER

ADD run.sh /run.sh

CMD /run.sh
